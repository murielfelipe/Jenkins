[{"C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\index.js":"1","C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\App.js":"2","C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\components\\TodoList.js":"4","C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\components\\TodoItem.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":2117,"mtime":1610660995230,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":406,"mtime":1610660842678,"results":"10","hashOfConfig":"7"},{"size":1042,"mtime":1610661730378,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"wju5c7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\index.js",[],["24","25"],"C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\App.js",["26"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [saving, setSaving] = useState(false);\n\n  function onChange(ev) {\n    const value = ev.target.value;\n    setNewTodo(value);\n  }\n\n  function addTodo(ev) {\n    ev.preventDefault();\n    const value = {\n      userId: 3,\n      id: Math.floor(Math.random() * 10000) + 1,\n      title: newTodo,\n      completed: false\n    };\n    setSaving(true);\n    fetch(\"https://jsonplaceholder.typicode.com/todos\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json;charset=UTF-8\" },\n      body: JSON.stringify(value)\n    })\n      .then(res => res.json())\n      .then(data => {\n        setTodos(todos.concat({ ...data, id: value.id }));\n        setSaving(false);\n      });\n  }\n\n  function removeTodo(_id) {\n    setTodos(todos.filter(t => t.id !== _id));\n  }\n\n  function updateTodo(_id) {\n    const newList = todos.map(t => {\n      if(t.id === _id) {\n        const updatedItem = { ...t, completed: !t.completed };\n        return updatedItem;\n      }\n      return t;\n    });\n    setTodos(newList);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const result = await fetch(\"https://jsonplaceholder.typicode.com/todos\").then(res => res.json());\n      setTodos(result.slice(0, 5));\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">My Todo List</h1>\n      {loading ? \"Loading...\" : (\n        <TodoList\n          todos={todos}\n          removeHandler={removeTodo}\n          updateTodo={updateTodo}\n        />\n      )}\n\n      <div className=\"add-todo-form\">\n        {saving ? \"Saving...\" : (\n          <form onSubmit={addTodo}>\n            <input type=\"text\" onChange={onChange} />\n            <button type=\"submit\">Add New Todo</button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\components\\TodoList.js",[],"C:\\xampp\\htdocs\\FullStackDevI\\Lab3\\demo-tdd\\Lab3GBC\\src\\components\\TodoItem.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]